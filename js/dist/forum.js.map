{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@laitouaigre/pages/webpack/bootstrap","webpack://@laitouaigre/pages/webpack/runtime/compat get default export","webpack://@laitouaigre/pages/webpack/runtime/define property getters","webpack://@laitouaigre/pages/webpack/runtime/hasOwnProperty shorthand","webpack://@laitouaigre/pages/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@laitouaigre/pages/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@laitouaigre/pages/external root \"flarum.reg.get('core', 'forum/components/DiscussionPage')\"","webpack://@laitouaigre/pages/./src/forum/utils/urlUtils.js","webpack://@laitouaigre/pages/./src/forum/components/PageCounterDisplay.js","webpack://@laitouaigre/pages/./src/forum/handlers/navigationHandler.js","webpack://@laitouaigre/pages/./src/forum/state/pageCounterState.js","webpack://@laitouaigre/pages/./src/forum/handlers/eventHandlers.js","webpack://@laitouaigre/pages/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extend');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/DiscussionPage');","/**\n * Gets the current post number from the Flarum discussion URL path.\n * Assumes standard Flarum URL format: /d/{id}-{slug}/{post_number}\n * If on the main discussion page without a specific post, it defaults to 1.\n * @returns {number} The current post number, or 1 if not found or invalid.\n */\nexport function getCurrentPostNumberFromPath() {\n  try {\n    const pathname = window.location.pathname;\n    const parts = pathname.split('/').filter(part => part.length > 0); // Split and remove empty parts\n\n    // Check if it looks like a discussion URL: [/]d/{id-slug}/{post_number}\n    // parts[0] should be 'd'\n    if (parts.length >= 2 && parts[0] === 'd') {\n      // parts[1] is '{id}-{slug}'\n      // parts[2] (if exists) should be the post number\n      if (parts.length >= 3) {\n        const postNumberStr = parts[2];\n        const postNumber = parseInt(postNumberStr, 10);\n        if (!isNaN(postNumber) && postNumber >= 1) {\n          return postNumber;\n        }\n      } else {\n        // On the main discussion page (e.g., /d/1-test), no specific post number.\n        // Default to the first post.\n        return 1;\n      }\n    }\n    // If URL doesn't match the expected discussion format\n    console.warn(\"Current URL does not match expected discussion format for post number:\", pathname);\n  } catch (error) {\n    console.error(\"Error parsing post number from path:\", error);\n  }\n  // Default fallback\n  return 1;\n}\nflarum.reg.add('laitouaigre-pages', 'forum/utils/urlUtils', { getCurrentPostNumberFromPath: getCurrentPostNumberFromPath, });","let pageNumberContainer = null;\nlet pageNumberInput = null;\nlet totalPagesSpan = null;\nlet isElementAdded = false;\n\n// --- Getters ---\nexport function getPageNumberInput() {\n  return pageNumberInput;\n}\nexport function getTotalPagesSpan() {\n  return totalPagesSpan;\n}\nexport function isDisplayAdded() {\n  return isElementAdded;\n}\nexport function getContainer() {\n  return pageNumberContainer;\n}\n\n// --- Updaters ---\nexport function updateDisplay(currentPage, totalPages) {\n  if (!isElementAdded || !pageNumberInput || !totalPagesSpan) return;\n  pageNumberInput.value = currentPage;\n  pageNumberInput.min = 1;\n  pageNumberInput.max = totalPages;\n  totalPagesSpan.textContent = \" of \".concat(totalPages);\n}\n\n// --- Removers ---\nexport function removeDisplay() {\n  if (pageNumberContainer && pageNumberContainer.parentNode) {\n    pageNumberContainer.parentNode.removeChild(pageNumberContainer);\n  }\n  pageNumberContainer = null;\n  pageNumberInput = null;\n  totalPagesSpan = null;\n  isElementAdded = false;\n}\n\n// --- Cleanup Listeners ---\nexport function removeInputListeners(handleInputSubmission, handleInputChange) {\n  if (pageNumberInput) {\n    pageNumberInput.removeEventListener('keydown', handleInputSubmission);\n    pageNumberInput.removeEventListener('change', handleInputChange);\n    // Remove focus/blur listeners if they were added as variables\n    // pageNumberInput.removeEventListener('focus', onFocusHandler);\n    // pageNumberInput.removeEventListener('blur', onBlurHandler);\n  }\n}\n\n// --- Creators ---\nexport function createInteractiveElement(handleInputSubmission, handleInputChange) {\n  if (isElementAdded) return; // Prevent re-creation\n\n  pageNumberContainer = document.createElement('div');\n  pageNumberContainer.className = 'flarum-page-counter-container';\n  Object.assign(pageNumberContainer.style, {\n    // --- Positioning ---\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px',\n    zIndex: '9999',\n    // --- Darker Glassmorphism Effect ---\n    backgroundColor: '#1B2028',\n    // <<<<<<<<< DARKER\n    backdropFilter: 'blur(12px)',\n    borderRadius: '16px',\n    padding: '6px 8px',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '6px',\n    fontSize: '15px',\n    fontWeight: '600',\n    color: 'white',\n    transition: 'all 0.3s ease',\n    opacity: '0.95'\n  });\n\n  // --- Hover Effects ---\n  const handleMouseEnter = () => {\n    pageNumberContainer.style.opacity = '1';\n    pageNumberContainer.style.transform = 'translateY(-2px)';\n    pageNumberContainer.style.boxShadow = '0 6px 24px rgba(0, 0, 0, 0.4)'; // <<<<<<<<< DARKER\n  };\n  const handleMouseLeave = () => {\n    pageNumberContainer.style.opacity = '0.95';\n    pageNumberContainer.style.transform = 'translateY(0)';\n    pageNumberContainer.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.3)'; // <<<<<<<<< DARKER\n  };\n  pageNumberContainer.addEventListener('mouseenter', handleMouseEnter);\n  pageNumberContainer.addEventListener('mouseleave', handleMouseLeave);\n\n  // --- Store handlers for potential removal ---\n  pageNumberContainer._pageCounterMouseEnterHandler = handleMouseEnter;\n  pageNumberContainer._pageCounterMouseLeaveHandler = handleMouseLeave;\n  pageNumberInput = document.createElement('input');\n  pageNumberInput.className = 'flarum-page-counter-input';\n  pageNumberInput.type = 'number';\n  pageNumberInput.min = '1';\n  pageNumberInput.max = '1';\n  pageNumberInput.value = '1';\n  Object.assign(pageNumberInput.style, {\n    width: '40px',\n    padding: '6px 8px',\n    margin: '0',\n    // --- Darker Input Style ---\n    backgroundColor: '#212831',\n    // <<<<<<<<< DARKER\n    border: '1px solid rgba(255, 255, 255, 0.2)',\n    // <<<<<<<<< DARKER\n    borderRadius: '12px',\n    color: 'white',\n    fontSize: '15px',\n    fontWeight: '600',\n    textAlign: 'center',\n    outline: 'none',\n    flexShrink: 0\n    // Note: Hiding arrows via Object.assign style is complex for pseudo-elements.\n    // This is handled by injecting CSS below or via a separate CSS file.\n  });\n\n  // --- Inject CSS to hide spinner arrows (once) ---\n  const hideArrowsStyleId = 'flarum-page-counter-hide-arrows';\n  if (!document.getElementById(hideArrowsStyleId)) {\n    const hideArrowsStyle = document.createElement('style');\n    hideArrowsStyle.id = hideArrowsStyleId;\n    hideArrowsStyle.textContent = \"\\n          .flarum-page-counter-input::-webkit-outer-spin-button,\\n          .flarum-page-counter-input::-webkit-inner-spin-button {\\n            -webkit-appearance: none;\\n            margin: 0;\\n          }\\n          .flarum-page-counter-input {\\n            -moz-appearance: textfield;\\n          }\\n        \";\n    document.head.appendChild(hideArrowsStyle);\n  }\n  // --- End Inject CSS ---\n\n  // --- Focus/Blur Effects ---\n  const handleFocus = () => {\n    pageNumberInput.style.border = '1px solid rgba(100, 150, 255, 0.8)'; // <<<<<<<<< BLUE FOCUS\n    pageNumberInput.style.backgroundColor = 'rgba(60, 60, 60, 0.8)'; // <<<<<<<<< DARKER ON FOCUS\n    pageNumberInput.style.boxShadow = '0 0 0 2px rgba(30, 100, 200, 0.3)'; // <<<<<<<<< GLOW\n  };\n  const handleBlur = () => {\n    pageNumberInput.style.border = '1px solid rgba(255, 255, 255, 0.2)'; // <<<<<<<<< DARKER\n    pageNumberInput.style.backgroundColor = 'rgba(50, 50, 50, 0.6)'; // <<<<<<<<< DARKER\n    pageNumberInput.style.boxShadow = 'none';\n  };\n  pageNumberInput.addEventListener('focus', handleFocus);\n  pageNumberInput.addEventListener('blur', handleBlur);\n\n  // Store focus/blur handlers if needed for removal\n  pageNumberInput._pageCounterFocusHandler = handleFocus;\n  pageNumberInput._pageCounterBlurHandler = handleBlur;\n  pageNumberInput.addEventListener('keydown', handleInputSubmission);\n  pageNumberInput.addEventListener('change', handleInputChange);\n  totalPagesSpan = document.createElement('span');\n  totalPagesSpan.className = 'flarum-page-counter-total';\n  totalPagesSpan.textContent = ' / ...';\n  Object.assign(totalPagesSpan.style, {\n    padding: '0 4px',\n    userSelect: 'none',\n    pointerEvents: 'none'\n  });\n  pageNumberContainer.appendChild(pageNumberInput);\n  pageNumberContainer.appendChild(totalPagesSpan);\n  document.body.appendChild(pageNumberContainer);\n  isElementAdded = true;\n}\nexport function createPlaceholderElement() {\n  if (isElementAdded && pageNumberContainer) {\n    pageNumberContainer.remove();\n  }\n  pageNumberContainer = document.createElement('div');\n  pageNumberContainer.className = 'flarum-page-counter-container-placeholder';\n  Object.assign(pageNumberContainer.style, {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px',\n    zIndex: '9999',\n    // --- Darker Placeholder Style ---\n    backgroundColor: 'rgba(40, 40, 40, 0.5)',\n    // <<<<<<<<< DARKER\n    border: '1px dashed rgba(100, 100, 100, 0.4)',\n    // <<<<<<<<< DARKER\n    borderRadius: '16px',\n    padding: '6px 8px',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '6px',\n    fontSize: '15px',\n    fontWeight: '600',\n    color: 'rgba(200, 200, 200, 0.7)',\n    // <<<<<<<<< LIGHTER TEXT ON DARK\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n    // <<<<<<<<< DARKER\n    transition: 'opacity 0.2s ease',\n    opacity: '0.7',\n    pointerEvents: 'none'\n  });\n  const placeholderInputPart = document.createElement('span');\n  placeholderInputPart.className = 'page-counter-placeholder-part';\n  placeholderInputPart.textContent = '...';\n  Object.assign(placeholderInputPart.style, {\n    padding: '6px 8px',\n    margin: '0',\n    backgroundColor: 'rgba(60, 60, 60, 0.4)',\n    // <<<<<<<<< DARKER\n    color: 'rgba(200, 200, 200, 0.7)',\n    // <<<<<<<<< LIGHTER TEXT ON DARK\n    borderRadius: '12px',\n    fontSize: '15px',\n    fontWeight: '600',\n    userSelect: 'none'\n  });\n  const placeholderSeparatorTotalPart = document.createElement('span');\n  placeholderSeparatorTotalPart.className = 'page-counter-placeholder-part';\n  placeholderSeparatorTotalPart.textContent = ' / ...';\n  Object.assign(placeholderSeparatorTotalPart.style, {\n    padding: '0 4px',\n    userSelect: 'none',\n    pointerEvents: 'none'\n  });\n  pageNumberContainer.appendChild(placeholderInputPart);\n  pageNumberContainer.appendChild(placeholderSeparatorTotalPart);\n  document.body.appendChild(pageNumberContainer);\n  isElementAdded = true; // Even if placeholder\n  pageNumberInput = null;\n  totalPagesSpan = null;\n}\n\n// --- Enhanced Cleanup ---\nexport function removeAllListeners() {\n  if (pageNumberContainer) {\n    if (pageNumberContainer._pageCounterMouseEnterHandler) {\n      pageNumberContainer.removeEventListener('mouseenter', pageNumberContainer._pageCounterMouseEnterHandler);\n      delete pageNumberContainer._pageCounterMouseEnterHandler;\n    }\n    if (pageNumberContainer._pageCounterMouseLeaveHandler) {\n      pageNumberContainer.removeEventListener('mouseleave', pageNumberContainer._pageCounterMouseLeaveHandler);\n      delete pageNumberContainer._pageCounterMouseLeaveHandler;\n    }\n  }\n  if (pageNumberInput) {\n    if (pageNumberInput._pageCounterFocusHandler) {\n      pageNumberInput.removeEventListener('focus', pageNumberInput._pageCounterFocusHandler);\n      delete pageNumberInput._pageCounterFocusHandler;\n    }\n    if (pageNumberInput._pageCounterBlurHandler) {\n      pageNumberInput.removeEventListener('blur', pageNumberInput._pageCounterBlurHandler);\n      delete pageNumberInput._pageCounterBlurHandler;\n    }\n  }\n  // Remove injected CSS for arrows if desired (optional, usually safe to leave)\n  // const hideArrowsStyleId = 'flarum-page-counter-hide-arrows';\n  // const styleTag = document.getElementById(hideArrowsStyleId);\n  // if (styleTag) { styleTag.remove(); }\n}\nflarum.reg.add('laitouaigre-pages', 'forum/components/PageCounterDisplay', { getPageNumberInput: getPageNumberInput,getTotalPagesSpan: getTotalPagesSpan,isDisplayAdded: isDisplayAdded,getContainer: getContainer,updateDisplay: updateDisplay,removeDisplay: removeDisplay,removeInputListeners: removeInputListeners,createInteractiveElement: createInteractiveElement,createPlaceholderElement: createPlaceholderElement,removeAllListeners: removeAllListeners, });","import app from 'flarum/forum/app';\nconst POSTS_PER_PAGE = 20;\nexport function goToPage(pageNumber, totalPages, currentDiscussionId) {\n  const targetPage = parseInt(pageNumber, 10);\n  if (isNaN(targetPage) || targetPage < 1 || targetPage > totalPages) {\n    alert(\"Please enter a page number between 1 and \".concat(totalPages, \".\"));\n    // updateDisplay callback would be needed here, or trigger an event\n    // For simplicity, we'll assume the calling function handles UI reset\n    return;\n  }\n  const nearPostNumber = (targetPage - 1) * POSTS_PER_PAGE + 1;\n  if (!currentDiscussionId) {\n    console.error(\"Cannot navigate: Current discussion ID unknown.\");\n    return;\n  }\n  const discussion = app.store.getById('discussions', currentDiscussionId);\n  if (!discussion) {\n    console.error(\"Cannot navigate: Discussion model not found in store.\");\n    return;\n  }\n  const url = app.route.discussion(discussion, nearPostNumber);\n  if (app.history && typeof app.history.pushState === 'function') {\n    app.history.pushState(null, url);\n  } else {\n    window.location.assign(url);\n  }\n}\nflarum.reg.add('laitouaigre-pages', 'forum/handlers/navigationHandler', { goToPage: goToPage, });","let totalPosts = 0;\nlet totalPages = 0;\nlet currentDiscussionId = null;\nexport function getTotalPosts() {\n  return totalPosts;\n}\nexport function getTotalPages() {\n  return totalPages;\n}\nexport function getCurrentDiscussionId() {\n  return currentDiscussionId;\n}\nexport function setTotalPosts(posts) {\n  totalPosts = posts;\n  totalPages = Math.ceil(totalPosts / 20);\n}\nexport function setCurrentDiscussionId(id) {\n  currentDiscussionId = id;\n}\nexport function resetState() {\n  totalPosts = 0;\n  totalPages = 0;\n  currentDiscussionId = null;\n}\nflarum.reg.add('laitouaigre-pages', 'forum/state/pageCounterState', { getTotalPosts: getTotalPosts,getTotalPages: getTotalPages,getCurrentDiscussionId: getCurrentDiscussionId,setTotalPosts: setTotalPosts,setCurrentDiscussionId: setCurrentDiscussionId,resetState: resetState, });","import { goToPage } from './navigationHandler';\nimport { getCurrentPostNumberFromPath } from '../utils/urlUtils';\nimport { getTotalPages, getCurrentDiscussionId } from '../state/pageCounterState'; // Assume state module\nimport * as PageCounterDisplay from '../components/PageCounterDisplay';\nlet ticking = false;\nexport function createOnScrollHandler(getTotalPagesFn) {\n  // Pass a getter function for totalPages\n  return function onScroll() {\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const totalPages = getTotalPagesFn(); // Use the passed getter\n        if (totalPages > 0) {\n          const currentPostNumber = getCurrentPostNumberFromPath();\n          const currentPage = Math.max(1, Math.min(totalPages, Math.ceil(currentPostNumber / 20)));\n          PageCounterDisplay.updateDisplay(currentPage, totalPages); // <<<<<<<<< CALL UPDATED FUNCTION\n        }\n        ticking = false;\n      });\n      ticking = true;\n    }\n  };\n}\n// ... rest of the file ...\n// --- Input Handlers ---\nfunction performNavigation(inputValue) {\n  const totalPages = getTotalPages();\n  const currentDiscussionId = getCurrentDiscussionId();\n  if (totalPages > 0 && currentDiscussionId) {\n    goToPage(inputValue, totalPages, currentDiscussionId);\n  }\n}\nexport function handleInputChange() {\n  const input = this; // 'this' refers to the input element if listener is attached directly\n  // Or get it from a global/state reference if needed\n  const inputValue = input.value;\n  performNavigation(inputValue);\n}\nexport function handleInputSubmission(e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n    const input = e.target; // Get the input element that triggered the event\n    const inputValue = input.value;\n    performNavigation(inputValue);\n  }\n  // Optional: Add input validation here\n}\nflarum.reg.add('laitouaigre-pages', 'forum/handlers/eventHandlers', { createOnScrollHandler: createOnScrollHandler,handleInputChange: handleInputChange,handleInputSubmission: handleInputSubmission, });","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\n\n// Import your modules\nimport { getCurrentPostNumberFromPath } from './utils/urlUtils';\nimport * as PageCounterDisplay from './components/PageCounterDisplay';\nimport { goToPage } from './handlers/navigationHandler';\n// Assuming event handlers are structured to accept dependencies or use imports\nimport * as EventHandlers from './handlers/eventHandlers';\n// If using a state module\nimport * as PageCounterState from './state/pageCounterState';\napp.initializers.add('laitouaigre-pagesd-page-counter', () => {\n  let onScrollHandler = null; // Store reference to remove listener\n\n  // --- Function to create/update the page counter UI and State ---\n  function updatePageCounter(discussionPageComponent) {\n    const discussion = discussionPageComponent.discussion;\n    if (!discussion) {\n      if (PageCounterDisplay.isDisplayAdded()) {\n        PageCounterDisplay.removeAllListeners(); // Enhanced cleanup\n        PageCounterDisplay.removeDisplay();\n        if (onScrollHandler) {\n          window.removeEventListener('scroll', onScrollHandler);\n          onScrollHandler = null;\n        }\n        PageCounterState.resetState(); // If using state module\n      }\n      return;\n    }\n\n    // --- Update State (if using state module) ---\n    const newTotalPosts = discussion.attribute('lastPostNumber');\n    if (typeof newTotalPosts !== 'number' || newTotalPosts <= 0) {\n      if (!PageCounterDisplay.isDisplayAdded()) {\n        PageCounterDisplay.createPlaceholderElement(); // Handles dark style\n      }\n      PageCounterState.resetState(); // If using state module\n      if (onScrollHandler) {\n        window.removeEventListener('scroll', onScrollHandler);\n        onScrollHandler = null;\n      }\n      return;\n    }\n    const oldTotalPosts = PageCounterState.getTotalPosts(); // If using state module\n    const dataChanged = newTotalPosts !== oldTotalPosts;\n    if (dataChanged) {\n      PageCounterState.setTotalPosts(newTotalPosts); // Updates totalPages too\n      PageCounterState.setCurrentDiscussionId(discussion.id()); // If using state module\n    }\n\n    // --- Create Display if needed ---\n    if (!PageCounterDisplay.isDisplayAdded()) {\n      // Create bound handlers or pass necessary functions/variables\n      // Example: Pass state getters or navigation function\n      const handleSubmission = function (e) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          const inputValue = PageCounterDisplay.getPageNumberInput().value; // Get live value\n          const totalPages = PageCounterState.getTotalPages();\n          const currentDiscussionId = PageCounterState.getCurrentDiscussionId();\n          if (totalPages > 0 && currentDiscussionId) {\n            goToPage(inputValue, totalPages, currentDiscussionId); // Use imported function\n          }\n        }\n      };\n      const handleChange = function () {\n        const inputValue = this.value; // 'this' is the input element\n        const totalPages = PageCounterState.getTotalPages();\n        const currentDiscussionId = PageCounterState.getCurrentDiscussionId();\n        if (totalPages > 0 && currentDiscussionId) {\n          goToPage(inputValue, totalPages, currentDiscussionId); // Use imported function\n        }\n      };\n      PageCounterDisplay.createInteractiveElement(handleSubmission, handleChange); // Handles dark style & arrows\n\n      // Create scroll handler, passing a function to get the current totalPages\n      onScrollHandler = EventHandlers.createOnScrollHandler(() => PageCounterState.getTotalPages());\n      window.addEventListener('scroll', onScrollHandler, {\n        passive: true\n      });\n      setTimeout(() => {\n        // Initial UI update\n        const totalPages = PageCounterState.getTotalPages();\n        if (totalPages > 0) {\n          const currentPostNumber = getCurrentPostNumberFromPath(); // Use imported function\n          const currentPage = Math.max(1, Math.min(totalPages, Math.ceil(currentPostNumber / 20)));\n          PageCounterDisplay.updateDisplay(currentPage, totalPages); // Use imported function\n        }\n      }, 100);\n    } else if (dataChanged) {\n      // Update display if data changed (e.g., post count updated)\n      const totalPages = PageCounterState.getTotalPages();\n      const currentPostNumber = getCurrentPostNumberFromPath(); // Use imported function\n      const currentPage = Math.max(1, Math.min(totalPages, Math.ceil(currentPostNumber / 20)));\n      PageCounterDisplay.updateDisplay(currentPage, totalPages); // Use imported function\n    }\n    // If element exists, scroll listener handles continuous updates\n  }\n\n  // --- Extend DiscussionPage ---\n  extend(DiscussionPage.prototype, 'oncreate', function () {\n    updatePageCounter(this);\n  });\n  extend(DiscussionPage.prototype, 'onupdate', function () {\n    updatePageCounter(this);\n  });\n  extend(DiscussionPage.prototype, 'onremove', function () {\n    if (onScrollHandler) {\n      window.removeEventListener('scroll', onScrollHandler);\n      onScrollHandler = null;\n    }\n    // Remove all listeners attached to elements (focus, blur, hover, input events)\n    PageCounterDisplay.removeAllListeners(); // Enhanced cleanup function\n\n    // Remove display elements\n    PageCounterDisplay.removeDisplay();\n\n    // Reset state if using state module\n    PageCounterState.resetState(); // If using state module\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","reg","getCurrentPostNumberFromPath","pathname","window","location","parts","split","filter","part","length","postNumberStr","postNumber","parseInt","isNaN","console","warn","error","add","pageNumberContainer","pageNumberInput","totalPagesSpan","isElementAdded","getPageNumberInput","isDisplayAdded","updateDisplay","currentPage","totalPages","value","min","max","textContent","concat","removeDisplay","parentNode","removeChild","createInteractiveElement","handleInputSubmission","handleInputChange","document","createElement","className","assign","style","position","bottom","right","zIndex","backgroundColor","backdropFilter","borderRadius","padding","display","alignItems","gap","fontSize","fontWeight","color","transition","opacity","handleMouseEnter","transform","boxShadow","handleMouseLeave","addEventListener","_pageCounterMouseEnterHandler","_pageCounterMouseLeaveHandler","type","width","margin","border","textAlign","outline","flexShrink","hideArrowsStyleId","getElementById","hideArrowsStyle","id","head","appendChild","handleFocus","handleBlur","_pageCounterFocusHandler","_pageCounterBlurHandler","userSelect","pointerEvents","body","createPlaceholderElement","remove","placeholderInputPart","placeholderSeparatorTotalPart","removeAllListeners","removeEventListener","goToPage","pageNumber","currentDiscussionId","targetPage","alert","nearPostNumber","discussion","getById","url","pushState","getTotalPagesSpan","getContainer","removeInputListeners","totalPosts","getTotalPosts","getTotalPages","getCurrentDiscussionId","setTotalPosts","posts","Math","ceil","setCurrentDiscussionId","resetState","ticking","createOnScrollHandler","getTotalPagesFn","requestAnimationFrame","currentPostNumber","performNavigation","inputValue","this","e","preventDefault","target","onScrollHandler","updatePageCounter","discussionPageComponent","newTotalPosts","attribute","dataChanged","handleSubmission","handleChange","passive","setTimeout","extend"],"sourceRoot":""}